{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"toun",
				"tongueWidth"
			],
			[
				"to",
				"tongueHeight"
			],
			[
				"testTe",
				"testTestsFixed"
			],
			[
				"pas",
				"passwordHashModule	const"
			],
			[
				"col",
				"collectionName	parameter"
			],
			[
				"J",
				"jsonLoader	const"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Add Repository"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/interfaces/IUserData.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/src/fake-soi.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/src/lib/user-data-.ts",
		"/home/jjs/Documents/personal/3D/moped_parts/sachs.scad",
		"/home/jjs/Documents/personal/3D/judson/fridge.scad",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/src/lib/loadJSON.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/test/base-db-mocha.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/tsconfig.json",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/build-ts/fake-soi/src/lib/loadJSON.js",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/src/password-hash-bcrypt.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/tslint.json",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/src/lib/base-db.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/gulp.config.js",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/gulpfile.js",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/interfaces/IPasswordInterface.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/test/password-hash-mocha.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/src/password-hash-fast.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/test/bcrypt-nodejs-mocha.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/lib/base-db.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/fake-soi.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/src/string-format.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/common/test/string-format-mocha.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/lib/loadJSON.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/interfaces/IFakeSoiConfig.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/config/fake-soi-config.json",
		"/home/jjs/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects/fake-soi/src/lib/base-db.js",
		"/home/jjs/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects/fake-soi/src/lib/test-db.js",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/interfaces/fakeSoiConfig.ts",
		"/home/jjs/Projects/Athelon/SoiWidgets/sources/projects-ts/fake-soi/lib/load-json.ts",
		"/home/jjs/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/jjs/.config/sublime-text-3/Packages/ESLint/ESLint.sublime-settings",
		"/home/jjs/.config/sublime-text-3/Packages/User/ESLint.sublime-settings",
		"/home/jjs/.config/sublime-text-3/Packages/TypeScript/TypeScript.sublime-settings",
		"/home/jjs/.config/sublime-text-3/Packages/User/TypeScript.sublime-settings"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 99.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"fake-soi",
			"serve",
			"/lib/loadJSON'",
			"src/",
			"src",
			"testSources",
			"coverage",
			"verify",
			"console",
			"wrong obj",
			"wrong object",
			"coverageDir",
			"_mapAll",
			"tsc",
			"port",
			"9001",
			"runTest",
			"test",
			"srcFiles",
			"format",
			"tsfmt",
			"format",
			"copyFile",
			"cd",
			"soiConfig",
			"createFormatJsTask",
			"formatjs",
			"format",
			"Promise"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/TypeScript/TypeScript.sublime-build",
	"project": "fake-soi.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
